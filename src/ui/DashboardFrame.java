/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.event.WindowStateListener;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import utilities.UtilityOperations;

/**
 *
 * @author INIONGUN ISAAC I
 */
public class DashboardFrame extends javax.swing.JFrame implements WindowListener, WindowStateListener {

    /**
     * Creates new form DashboardFrame
     * @param username
     * @param Password
     */
    
    private static String username;
    private static String password;
    
    JSplitPane splitPane;
    JPanel panel;
    
    UtilityOperations utilOps;
    
    public DashboardFrame(String username, String password) {
        
        super("Application Management System(AMS) - Dashboard | User: Admin | Role: Admin");
        getContentPane().setBackground(Color.white);
        
        initComponents();
        
        utilOps = new UtilityOperations();
        
        this.username = username;
        this.password = password;
        
        if(!username.equalsIgnoreCase("ams") && !password.equalsIgnoreCase("123")){
            dispose();
            new LoginFrame();
        }
        
        //set the Icon to the top left on the titlebar and on the toolbar 
        ImageIcon img = new ImageIcon(DashboardFrame.class.getResource("/res/images/nimccard.jpg"));
        this.setIconImage(img.getImage());
        
        //centralize the Frame
        utilOps.centralizeFrame(this);
        
        addWindowListener(this);
        
        panel = new JPanel();
        panel.setBackground(Color.white);
        
        splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, true, new DashboardLeftPanel(this), panel) {
            private final int location = 265;

            {
                setDividerLocation(location);
            }

            @Override
            public int getDividerLocation() {
                return location;
            }

            @Override
            public int getLastDividerLocation() {
                return location;
            }
        };
        
        //splitPane.setBackground(Color.white);

        JPanel contentPanel = new JPanel(new BorderLayout());
        contentPanel.add(splitPane, BorderLayout.CENTER);
        //add(contentPanel);
        setContentPane(contentPanel);
        //pack();
        setVisible(true);
    }

    DashboardFrame() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public void setSplitPaneRightComponent(int panelType){
        //splitPane.setRightComponent(panel);
        switch(panelType){
            case 1:
                splitPane.setRightComponent(new ActivateCardPanel());
                break;
            case 2:
                splitPane.setRightComponent(new ChangeEPKIUserPinPanel());
                break;
            case 3:
                splitPane.setRightComponent(new ResetUserEPKIPinWithMOCPanel());
                break;
            case 4:
                splitPane.setRightComponent(new ChangeEIDPinPanel());
                break;
            case 5:
                splitPane.setRightComponent(new ResetEIDPinPanel());
                break;
            case 6:
                splitPane.setRightComponent(new ManageUserPanel());
                break;
            case 7:
                splitPane.setRightComponent(new ChangePasswordPanel());
                break;
            case 8:
                splitPane.setRightComponent(new CardOperationsPanel());
                break;
            default:
                splitPane.setRightComponent(panel);
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Application Management System (AMS) - Dashboard");
        setMinimumSize(new java.awt.Dimension(1095, 705));
        setPreferredSize(new java.awt.Dimension(1095, 700));
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 714, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardFrame(username, password).setVisible(true);
            }
        });
    }
    
    @Override
    public void windowOpened(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowClosing(WindowEvent e) {
        int confirmCloseOp = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit? Note: This will Log you Off!", "Action Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if(confirmCloseOp == JOptionPane.YES_OPTION){
            LoginFrame loginFrame = new LoginFrame();
            loginFrame.setVisible(true);
            dispose();
        }
    }

    @Override
    public void windowClosed(WindowEvent e) {
        
    }

    @Override
    public void windowIconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowActivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowStateChanged(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
